{"version":3,"sources":["components/Toolbar/Toolbar.js","components/MovieCard/MovieCard.js","components/LoadMoreCard/LoadMoreCard.js","components/MovieFeed/MovieFeed.js","components/LandingPage/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","AppToolbar","props","classes","AppBar","position","color","Toolbar","Typography","variant","className","IconButton","aria-label","root","width","margin","media","height","MovieCard","movieTitle","moviePoster","moviePlot","Card","CardContent","Skeleton","animation","CardMedia","image","gutterBottom","component","LoadMoreCard","onLoadMore","CardActionArea","onClick","CardActions","Button","size","MovieFeed","feed","map","movie","thumbnail","plot","tmdbId","showMore","paper","minHeight","display","flexDirection","container","flexWrap","marginLeft","marginRight","TITLE_FEED_QUERY","gql","LandingPage","useState","limit","setLimit","useQuery","variables","offset","loading","data","fetchMore","Paper","square","getTitles","length","currentLength","then","fetchMoreResult","client","ApolloClient","uri","cache","InMemoryCache","typePolicies","Query","fields","offsetLimitPagination","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","palette","type","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.964a3fdf.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst AppToolbar = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\" color=\"primary\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {props.title ?? \"Webvidz\"}\r\n        </Typography>\r\n        <IconButton aria-label=\"Account Menu\" color=\"inherit\">\r\n          <AccountCircle />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppToolbar;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 154,\r\n    margin: 10,\r\n  },\r\n  media: {\r\n    height: 231,\r\n    width: 154,\r\n  },\r\n});\r\n\r\nconst MovieCard = ({ movieTitle, moviePoster, moviePlot }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {moviePoster === \"null\" ? (\r\n        <CardContent className={classes.media}>\r\n          <Skeleton variant=\"text\" animation={false} />\r\n          <Skeleton variant=\"circle\" width={40} height={40} animation={false} />\r\n          <Skeleton variant=\"rect\" height={150} animation={false} />\r\n        </CardContent>\r\n      ) : (\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={moviePoster}\r\n          title={movieTitle + \" Poster\"}\r\n        />\r\n      )}\r\n      <Typography gutterBottom variant=\"h6\" component=\"p\">\r\n        {movieTitle}\r\n      </Typography>\r\n      {moviePlot && (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {moviePlot}\r\n        </Typography>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport {\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 154,\r\n    margin: 10,\r\n  },\r\n  media: {\r\n    height: 231,\r\n    width: 154,\r\n  },\r\n});\r\n\r\nconst LoadMoreCard = ({ onLoadMore }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={onLoadMore}>\r\n        <CardContent className={classes.media}>\r\n          <Skeleton variant=\"text\" animation={false} />\r\n          <Skeleton variant=\"circle\" width={40} height={40} animation={false} />\r\n          <Skeleton variant=\"rect\" height={150} animation={false} />\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={onLoadMore}>\r\n          Load More Titles...\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LoadMoreCard;\r\n","import MovieCard from \"../MovieCard/MovieCard\";\r\nimport LoadMoreCard from \"../LoadMoreCard/LoadMoreCard\";\r\n\r\nconst MovieFeed = (props) => {\r\n  const feed = props.feed.map((movie) => (\r\n    <MovieCard\r\n      key={movie.tmdbId}\r\n      movieTitle={movie.title}\r\n      moviePoster={movie.thumbnail}\r\n      moviePlot={movie.plot}\r\n    />\r\n  ));\r\n  return [\r\n    ...feed,\r\n    props.showMore ? (\r\n      <LoadMoreCard key={-1} onLoadMore={() => props.onLoadMore()} />\r\n    ) : null,\r\n  ];\r\n};\r\n\r\nexport default MovieFeed;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport MovieFeed from \"../MovieFeed/MovieFeed\";\r\nimport { useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"relative\",\r\n    minHeight: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    marginLeft: 100,\r\n    marginRight: 100,\r\n  },\r\n}));\r\n\r\n// Hardcoding max records to disable more button\r\nconst MAX_PAGE_SIZE = 150;\r\nconst MAX_QUERY_SIZE = 20;\r\n\r\nconst TITLE_FEED_QUERY = gql`\r\n  query($limit: Int, $offset: Int) {\r\n    getTitles(limit: $limit, offset: $offset) {\r\n      tmdbId\r\n      title\r\n      thumbnail\r\n    }\r\n  }\r\n`;\r\n\r\nfunction LandingPage() {\r\n  const classes = useStyles();\r\n  const [limit, setLimit] = useState(MAX_QUERY_SIZE);\r\n  const { loading, data, fetchMore } = useQuery(TITLE_FEED_QUERY, {\r\n    variables: {\r\n      offset: 0,\r\n      limit,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Paper square className={classes.paper}>\r\n      <div className={classes.container}>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <MovieFeed\r\n            feed={data.getTitles || []}\r\n            showMore={(data.getTitles.length || 0) < MAX_PAGE_SIZE}\r\n            onLoadMore={() => {\r\n              const currentLength = data.getTitles.length;\r\n              fetchMore({\r\n                variables: {\r\n                  offset: currentLength,\r\n                  limit: MAX_QUERY_SIZE,\r\n                },\r\n              }).then((fetchMoreResult) => {\r\n                setLimit(currentLength + fetchMoreResult.data.getTitles.length);\r\n              });\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import { useMemo } from \"react\";\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { offsetLimitPagination } from \"@apollo/client/utilities\";\nimport { CssBaseline, createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport \"./App.css\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport LandingPage from \"./components/LandingPage/LandingPage\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          getTitles: offsetLimitPagination(),\n        },\n      },\n    },\n  }),\n});\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Toolbar title=\"DEMO Streaming\" />\n        <LandingPage />\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}